class Solution {
    // Function to return a list containing the DFS traversal of the graph.
    public ArrayList<Integer> dfsOfGraph(int V, ArrayList<ArrayList<Integer>> adj) {
        // Code here
        ArrayList<Integer> ans = new ArrayList<Integer>();
        boolean[] visited = new boolean[V];
        dfsCalls(V, 0, adj, visited, ans);
        return ans;
    }
    public void dfsCalls(int n, int node, ArrayList<ArrayList<Integer>> list, boolean[] visited,
            ArrayList<Integer> ans) {
        visited[node] = true;
        ans.add(node);
        for (int ele : list.get(node)) {
            if (!visited[ele]) {
                dfsCalls(n, ele, list, visited, ans);
            }
        }
    }
}