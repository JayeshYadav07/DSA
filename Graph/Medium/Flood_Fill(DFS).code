class Solution {
    public void solve(int[][] image , int sr , int sc , int prevColor , int newColor ,boolean [][]visited )
    {
        if(sr >= 0 && sr < image.length && sc >= 0 && sc < image[0].length && image[sr][sc]==prevColor && visited[sr][sc]==false )
        {
            //update the color
            image[sr][sc] = newColor;
            visited[sr][sc] = true;
            // top
            solve(image , sr-1 , sc , prevColor, newColor , visited);
            //right
            solve(image , sr , sc+1 , prevColor , newColor , visited);
            //bottom
            solve(image , sr+1 , sc , prevColor ,newColor , visited);
            //left
            solve(image , sr , sc-1 , prevColor , newColor , visited);

        }
    }
    public int[][] floodFill(int[][] image, int sr, int sc, int newColor) {
        boolean [][]visited = new boolean[image.length][image[0].length];
        solve(image , sr , sc , image[sr][sc] , newColor , visited);
        return image;
    }
}